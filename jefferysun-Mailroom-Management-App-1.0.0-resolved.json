{
  "openapi": "3.0.0",
  "info": {
    "title": "EAB Inventory Management API",
    "description": "EAB Inventory Management API",
    "contact": {
      "email": "jsun@eab.com"
    },
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://virtserver.swaggerhub.com/jefferysun/Mailroom-Management-App/1.0.0",
      "description": "SwaggerHub API Auto Mocking"
    }
  ],
  "tags": [
    {
      "name": "Inventory",
      "description": "Inventory Data Service"
    },
    {
      "name": "Util",
      "description": "Util Service"
    }
  ],
  "paths": {
    "/ocr": {
      "post": {
        "tags": [
          "Util"
        ],
        "summary": "Run ocr on uploaded image",
        "description": "Run ocr on uploaded image",
        "operationId": "ocr",
        "requestBody": {
          "content": {
            "application/octet-stream": {
              "schema": {
                "type": "string",
                "format": "byte"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OCR result",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Detection"
                }
              }
            }
          }
        }
      }
    },
    "/employee": {
      "get": {
        "tags": [
          "Inventory"
        ],
        "summary": "Search employee by name",
        "description": "Search active EAB employees by name",
        "operationId": "searchEmployee",
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "description": "Pass name search string for searching employee",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "minLength": 4,
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "maximum number of records to return",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "maximum": 10,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return a list of employees",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Employee"
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad input parameter"
          },
          "404": {
            "description": "not found"
          }
        }
      }
    },
    "/inventory": {
      "get": {
        "tags": [
          "Inventory"
        ],
        "summary": "Search inventory by employee id",
        "description": "Search inventory by employee id",
        "operationId": "searchInventory",
        "parameters": [
          {
            "name": "employeeId",
            "in": "query",
            "description": "The receiver's employeeId",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "maxLength": 6,
              "minLength": 6,
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "maximum number of records to return",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return a list of inventory items belong to employee",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/InventoryItem"
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad input parameter"
          },
          "404": {
            "description": "Item not found"
          }
        }
      },
      "post": {
        "tags": [
          "Inventory"
        ],
        "summary": "Adds an inventory item",
        "description": "Adds an item to the system",
        "operationId": "addInventory",
        "requestBody": {
          "description": "Inventory item to add",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InventoryItem"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "item created"
          },
          "400": {
            "description": "invalid input, object invalid"
          },
          "409": {
            "description": "an existing item already exists"
          }
        }
      }
    },
    "/inventory/{id}": {
      "get": {
        "tags": [
          "Inventory"
        ],
        "summary": "Looks up inventory item by id",
        "description": "Lookup inventory item by Item Id\n",
        "operationId": "lookupInventory",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id of inventory item to update",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Matching inventory item",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/InventoryItem"
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad input parameter or not found"
          }
        }
      },
      "post": {
        "tags": [
          "Inventory"
        ],
        "summary": "Updates an existing inventory item",
        "operationId": "updateInventory",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id of inventory item to update",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Inventory item to update",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InventoryItem"
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Invalid id supplied"
          },
          "404": {
            "description": "Item not found"
          },
          "405": {
            "description": "Validation exception"
          }
        }
      }
    },
    "/inventory/{id}/attachments": {
      "post": {
        "tags": [
          "Inventory"
        ],
        "summary": "Uploads an attachment for the inventory item",
        "operationId": "uploadAttachment",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id of inventory item to update",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Attachment"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "ApiResponse": {
        "type": "object",
        "properties": {
          "code": {
            "type": "integer",
            "format": "int32"
          },
          "type": {
            "type": "string"
          },
          "message": {
            "type": "string"
          }
        }
      },
      "InventoryItem": {
        "required": [
          "id",
          "sender",
          "status",
          "type"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The unique item id associated with the item",
            "example": "INV-d290f1ee"
          },
          "type": {
            "type": "string",
            "description": "The item type",
            "enum": [
              "Mail",
              "Package"
            ]
          },
          "carrier": {
            "type": "string",
            "description": "The item carrier",
            "enum": [
              "USPS",
              "UPS",
              "Fedex",
              "Other"
            ]
          },
          "sender": {
            "type": "string",
            "description": "The sender of the item",
            "example": "ABC Corp"
          },
          "receiver": {
            "type": "string",
            "description": "Receiver's employee id",
            "example": "123456"
          },
          "status": {
            "type": "string",
            "description": "The item status",
            "enum": [
              "New",
              "Waiting for user",
              "Waiting-Picking up",
              "Waiting-Scanning",
              "Waiting-Discarding",
              "Completed-Picked up",
              "Completed-Discard"
            ]
          },
          "bin": {
            "type": "string",
            "description": "The storage bin code where the item is put into"
          },
          "createdDate": {
            "type": "string",
            "description": "The time when item was added to system",
            "format": "date-time"
          },
          "createdBy": {
            "type": "string",
            "description": "The name of employee who added the item"
          },
          "lastUpdatedDate": {
            "type": "string",
            "description": "The time when the item was updated",
            "format": "date-time"
          },
          "lastUpdatedBy": {
            "type": "string",
            "description": "The name of employee who updated the item"
          },
          "attachments": {
            "type": "array",
            "description": "List of attachments associated with the item",
            "items": {
              "$ref": "#/components/schemas/Attachment"
            }
          }
        }
      },
      "Employee": {
        "required": [
          "email"
        ],
        "type": "object",
        "properties": {
          "firstName": {
            "type": "string",
            "example": "John"
          },
          "lastName": {
            "type": "string",
            "example": "Smith"
          },
          "email": {
            "type": "string",
            "format": "email",
            "example": "jsmitheab.com"
          },
          "employeeId": {
            "type": "string",
            "example": "123456"
          }
        }
      },
      "Attachment": {
        "required": [
          "content",
          "main"
        ],
        "type": "object",
        "properties": {
          "main": {
            "type": "boolean",
            "description": "If this is the main image of the item",
            "example": true
          },
          "name": {
            "type": "string",
            "description": "File name of the image",
            "example": "Scan-01"
          },
          "content": {
            "type": "string",
            "description": "File content (Base64 encoded)",
            "format": "byte"
          }
        }
      },
      "Detection": {
        "type": "object",
        "properties": {
          "sender": {
            "type": "string",
            "description": "Sender of the mail / package",
            "example": "Microsoft"
          },
          "receiver": {
            "type": "string",
            "description": "Receiver of the mail / package",
            "example": "Joe Smith"
          },
          "carrier": {
            "type": "string",
            "description": "Carrier of the mail / package",
            "example": "USPS"
          }
        }
      }
    }
  }
}